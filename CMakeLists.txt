PROJECT(stm32_basic)

CMAKE_MINIMUM_REQUIRED(VERSION 3.20)

SET(CMAKE_TOOLCHAIN_FILE stm32.cmake)

# Flash size
SET(STM32_FLASH_SIZE "64K")
# RAM size
SET(STM32_RAM_SIZE "8K")
# Stack address - bottom of RAM => RAM origin + RAM size
SET(STM32_STACK_ADDRESS "0x20002000")

# Origins
SET(STM32_FLASH_ORIGN "0x08000000")
SET(STM32_RAM_ORIGN "0x20000000")

# Compiler definitions
ADD_DEFINITIONS( 
  # Chip type 
  -DSTM32F051x8  
)

# Set chip type
SET(STARTUP_SOURCE ${STM32_STARTUP_FILE})

# Project sources
SET(PROJECT_SOURCES
  main.c
)

SET(COMPILE_DEFINITIONS_DEBUG -O0 -g3 -DDEBUG)
SET(COMPILE_DEFINITIONS_RELEASE -Os)

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/STM32F051R8TX_FLASH.ld.in ${CMAKE_CURRENT_BINARY_DIR}/STM32F051R8TX_FLASH.ld)
SET(CMAKE_EXE_LINKER_FLAGS "-T${CMAKE_CURRENT_BINARY_DIR}/STM32F051R8TX_FLASH.ld ${CMAKE_EXE_LINKER_FLAGS}")

INCLUDE_DIRECTORIES(
  ${CMAKE_CURRENT_SOURCE_DIR}/Src
  ${CMAKE_CURRENT_SOURCE_DIR}/Inc
  ${STM32_StdPeriphLib_INCLUDE_DIRS}
)

ADD_EXECUTABLE(${CMAKE_PROJECT_NAME}.elf ${PROJECT_SOURCES} ${MOD_SOURCES} ${STARTUP_SOURCE})

ADD_CUSTOM_COMMAND(TARGET ${CMAKE_PROJECT_NAME}.elf POST_BUILD COMMAND ${CMAKE_OBJCOPY} ARGS -Oihex ${CMAKE_PROJECT_NAME}.elf ${CMAKE_PROJECT_NAME}.hex)
ADD_CUSTOM_COMMAND(TARGET ${CMAKE_PROJECT_NAME}.elf POST_BUILD COMMAND ${CMAKE_OBJCOPY} ARGS -Obinary ${CMAKE_PROJECT_NAME}.elf ${CMAKE_PROJECT_NAME}.bin)